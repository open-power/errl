
#ifndef TARG_ATTRIBUTESTRINGS_H
#define TARG_ATTRIBUTESTRINGS_H

/**
 *  @file attributestrings.H
 *
 *  @brief Attribute string conversion routines.  This file is autogenerated
 *      and should not be altered.
 */

//******************************************************************************
// Includes
//******************************************************************************

// STD
#include <stdint.h>
#include <stdlib.h>

namespace TARGETING
{

/**
 *  @brief Class used to clarify compiler error when caller attempts to
 *      stringify an unsupported attribute
 */
class InvalidAttributeForStringification;

/**
 *  @brief Return attribute as a string
 *
 *  @param[in] i_attrValue Value of the attribute
 *
 *  @return String which decodes the attribute value
 */
template<const ATTRIBUTE_ID A>
const char* attrToString(
    typename AttributeTraits<A>::Type const& i_attrValue)
{
    // Default behavior is to fail the compile if caller attempt to print an
    // unsupported string
    return InvalidAttributeForStringification();
}

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_CLASS>(
    AttributeTraits<ATTR_CLASS>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_TYPE>(
    AttributeTraits<ATTR_TYPE>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_MODEL>(
    AttributeTraits<ATTR_MODEL>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_ENGINE_TYPE>(
    AttributeTraits<ATTR_ENGINE_TYPE>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_FSI_MASTER_TYPE>(
    AttributeTraits<ATTR_FSI_MASTER_TYPE>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_PAYLOAD_KIND>(
    AttributeTraits<ATTR_PAYLOAD_KIND>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_CDM_DOMAIN>(
    AttributeTraits<ATTR_CDM_DOMAIN>::Type const& i_attrValue);

/**
 *  @brief See attrToString<const ATTRIBUTE_ID A>
 */
template<>
const char* attrToString<ATTR_MRW_NEST_CAPABLE_FREQUENCIES_SYS>(
    AttributeTraits<ATTR_MRW_NEST_CAPABLE_FREQUENCIES_SYS>::Type const& i_attrValue);


} // End namespace TARGETING

#endif // TARG_ATTRIBUTESTRINGS_H

